# define PROTOTYPES_H_
#ifndef PROTOTYPES_H_
int	is_number(char *str);
int	line_cmp(char *str);
int	fill_line(t_champ *champ, t_settings *sets, int cmp, int value);
int	add_in_list(t_champ *new_elem, t_champ *champ, char *str);
t_champ	*init_champ();
int	add_champs_in_list(t_champ *champ, char **stock, t_settings *sets);
int	ins_live(t_champ *champ, t_arena *arena);
int	ins_ld(t_champ *champ, t_arena *arena);
int	ins_st(t_champ *champ, t_arena *arena);
int	ins_add(t_champ *champ, t_arena *arena);
int	ins_sub(t_champ *champ, t_arena *arena);
int	ins_and(t_champ *champ, t_arena *arena);
int	ins_or(t_champ *champ, t_arena *arena);
int	ins_xor(t_champ *champ, t_arena *arena);
int	ins_zjmp(t_champ *champ, t_arena *arena);
int	ins_ldi(t_champ *champ, t_arena *arena);
int	ins_sti(t_champ *champ, t_arena *arena);
int	ins_fork(t_champ *champ, t_arena *arena);
int	ins_lld(t_champ *champ, t_arena *arena);
int	ins_lldi(t_champ *champ, t_arena *arena);
int	ins_lfork(t_champ *champ, t_arena *arena);
int	ins_aff(t_champ *champ, t_arena *arena);
int	rd_open(char *name, int *fd);
int	read_header(t_champ *champ, int fd);
int	read_code(t_champ *champ, int fd);
int	fill_champs(t_champ *champ);
int	syntax_error();
int	option_error(int cmp);
int	not_a_number(char *str);
int	write_in_arena(t_arena *arena, char *code, int size, int pos);
int	get_size(t_arena *arena, t_champ *root, int mem_size);
t_arena	*init_arena(t_champ *root, int mem_size);
int	shw_list(t_champ *root);
void	display_arena(char *str, int mem_size);
void	display_sets(t_settings *sets);
int	print_map(t_arena *arena);
int	exec_command(t_champ *champ, t_arena *arena);
int	who_is_alive(t_champ *champ, t_arena *arena);
int	actualise_cycles(t_arena *arena);
int	handle_cycles(t_arena *arena, t_champ *champ);
int	start_battle(t_champ *root, t_arena *arena, t_settings *sets);
void	get_params_value2(char *buff, int *i, int j, t_cmd *instruct);
void	get_params_value4(char *buff, int *i, int j, t_cmd *instruct);
void	get_ld_params(char *buff, int *i, int j, t_cmd *instruct);
void	get_args_oct(char *buff, t_cmd *instruct, int *i);
void	get_args(char *buff, t_cmd *instruct, int *i);
int	get_instruction(char *arena, t_cmd *cmd);
int	show_inst(t_champ *champ);
int	exec_instruction(t_champ *champ, t_arena *arena);

#endif /* !PROTOTYPES_H_
